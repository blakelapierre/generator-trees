{"version":3,"sources":["src/trees.js"],"names":[],"mappings":"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","file":"src/trees.js","sourcesContent":["var {toArray, toGenerator} = require('./generators');\n\n\nmodule.exports = {\n  preorder,\n  inorder,\n  postorder,\n  breadthFirst,\n  reduce,\n  makeNode,\n  toNode,\n  asNode,\n  allBinaryTrees,\n  printTree\n};\n\n\n\n//   R\n//  / \\\n// A  B\n//\n// : [R, A, B]\nfunction* preorder(node) {\n  if (!node) {\n    //return undefined;\n    throw Error('preorder, no node!');\n  }\nconsole.log('preorder', node);\n  var result = node.next(),\n      value = result.value;\n\n  if (result.done) return value;\n\n  yield value;\n\n  while (true) {\n    var childResult = node.next();\n\n    var childGenerator = preorder(childResult.value);\n    while (true) {\n      var childGeneratorResult = childGenerator.next();\n\n      if (childGeneratorResult.done) {\n        if (childResult.done) return childGeneratorResult.value;\n\n        yield childGeneratorResult.value;\n        break;\n      }\n      else yield childGeneratorResult.value;\n    }\n  }\n}\n\nfunction reduce(node, reduceFn, collapseFn, unitValue) {\n  if (unitValue == undefined) {\n    unitValue = collapseFn;\n    collapseFn = reduceFn;\n  }\n  // console.log('reduce', node);\n\n  // if (!node) {\n  //   console.log('reduce, no node!');\n  // }\n\n  // var valueResult = node.next(),\n  //     value = valueResult.value;\n\n  //     console.log(value);\n\n  // if (valueResult.done) return value;\n\n  // while (true) {\n  //   var child = node.next(),\n  //       reducedValue = unitValue;\n\n  //   var childGenerator = reduce(child.value, reduceFn, unitValue);\n  //   while (true) {\n  //     var childGeneratorResult = childGenerator.next(),\n  //         childValue = childGeneratorResult.value;\n\n  //     // should we be mutating?\n  //     // reduceFn(reducedValue, childValue);\n\n  //     reducedValue = reduceFn(reducedValue, childValue);\n\n  //     if (childGeneratorResult.done) break;\n  //   }\n\n  //   if (child.done) return reducedValue;\n\n  //   yield reducedValue;\n  // }\n\n  return reduceNode(node);\n\n  function reduceNode(node) {\n    console.log('reduceNode', node);\n    if (!node) {\n      console.log('reduceNode, no node!');\n    }\n\n    var valueResult = node.next(),\n        value = valueResult.value;\n\n    if (valueResult.done) return collapseFn(value, unitValue());\n\n    return collapseFn(value, reduceChildren(node));\n  }\n\n  function reduceChildren(children) {\n    console.log('reduceChildren', children);\n    var reducedValue = unitValue();\n    while (true) {\n      var childResult = children.next(),\n          value = childResult.value;\n\n      reducedValue = reduceFn(reducedValue, reduceNode(value));\n\n      if (childResult.done) break;\n    }\n    return reducedValue;\n  }\n}\n\n\n//   R\n//  / \\\n// A  B\n//\n// : [A, R, B]\nfunction* inorder(node) {\n  if (!node) {\n    console.log('inorder, no node!');\n  }\n\n  var valueResult = node.next(),\n      value = valueResult.value;\n\n  if (valueResult.done) return value;\n\n  var yieldedValue = false;\n  while (true) {\n    var child = node.next();\n\n    var childGenerator = inorder(child.value);\n    while (true) {\n      var childGeneratorResult = childGenerator.next();\n\n      if (childGeneratorResult.done) {\n        if (yieldedValue && child.done) return childGeneratorResult.value;\n        yield childGeneratorResult.value;\n        break;\n      }\n      else {\n        yield childGeneratorResult.value;\n      }\n    }\n\n    if (!yieldedValue) {\n      if (child.done) return value;\n      else yield value;\n\n      yieldedValue = true;\n    }\n  }\n}\n\n\n//   R\n//  / \\\n// A  B\n//\n// : [A, B, R]\nfunction* postorder(node) {\n  if (!node) {\n    console.log('postorder, no node!');\n  }\n\n  var valueResult = node.next(),\n      value = valueResult.value;\n\n  if (valueResult.done) return value;\n\n  while (true) {\n    var child = node.next();\n\n    var childGenerator = postorder(child.value);\n    while (true) {\n      var childGeneratorResult = childGenerator.next();\n\n      yield childGeneratorResult.value;\n\n      if (childGeneratorResult.done) break;\n    }\n\n    if (child.done) return value;\n  }\n}\n\n//   R\n//  / \\\n// A  B\n//\n// : [R, A, B]\n//\n// Emit self\n// foreach child:\n//    Emit\nfunction* breadthFirst(node, indent) {\n  indent = indent || '';\n  if (!node) {\n    console.log('breadthFirst, no node', node);\n  }\n\n  var valueResult = node.next(),\n      value = valueResult.value;\n\n  if (valueResult.done) return value;\n\n  yield value;\n\n  var queue = [{generator:node}];\n\n  while (queue.length != 0) {\n    var generator = queue.shift();\n\n    while (true) {\n      var result = generator.generator.next(),\n          childGenerator = result.value;\n\n      var firstResult = childGenerator.next();\n\n      if (firstResult.done) {\n        if (result.done && queue.length == 0) return firstResult.value;\n      }\n      else {\n        queue.push({parent: firstResult.value, generator: childGenerator});\n      }\n\n      yield firstResult.value;\n\n      if (result.done) break;\n    }\n  }\n}\n\nfunction* makeNode(value, children) {\n  if (children) {\n    yield value;\n\n    if (children.length) children = toGenerator(children); // really we want to just do this for arrays\n    if (typeof children == 'function') children = children();\n\n    while (true) {\n      var result = children.next();\n      if (result.done) return result.value;\n      else yield result.value;\n    }\n  }\n  else return value;\n}\n\nfunction makeFnNode(value, children) {\n  return () => makeNode(value, children);\n}\n\nfunction toNode(generator) {\n  var ret = {};\n\n  var result = generator.next();\n  ret.value = result.value;\n  if (!result.done) ret.children = toArray(generator);\n  return ret;\n}\n\nfunction asNode(generator, ...args) {\n  return toNode(generator(...args));\n}\n\nfunction printGenerator(generator) {\n  while (true) {\n    var result = generator.next();\n\n    console.log('print', result.value);\n\n    if (result.done) break;\n  }\n}\n\nfunction* allBinaryTrees(size, valueGenerator) {\n  if (size == 0) return makeNode(undefined);\n\n  // foreach (tree in trees) {\n  //   yield tree;\n  // }\n\n  var i = 0;\n  for (i; i < size - 1; i++) {\n    for (var j = 0; j < size - i - 1; j++) {\n      yield constructTree(i, j, valueGenerator, 0);\n    }\n  }\n\n\n  function* constructTree(leftSize, rightSize, valueGenerator, seed) {\n    var value = valueGenerator(seed).next().value;\n  }\n}\n\n// static IEnumerable<Node> AllBinaryTrees(int size)\n// {\n//     if (size == 0)\n//         return new Node[] { null };\n//     return from i in Enumerable.Range(0, size)\n//            from left in AllBinaryTrees(i)\n//            from right in AllBinaryTrees(size - 1 - i)\n//            select new Node(left, right);\n// }\n\n\nfunction* allBinaryTrees(size, valueGenerator, seed) {\n  if (size == 0) return makeFnNode(undefined);\n\n  var nodeValue = valueGenerator(seed).next().value;\n\n  if (size == 1) return makeFnNode(nodeValue);\n\n  var i = 0;\n  for (i; i < size - 1; i++) {\n    var left = allBinaryTrees(i, valueGenerator, nodeValue + 1);\n\n    while (true) {\n      var j = size - 1 - i,\n          right = allBinaryTrees(j, valueGenerator, nodeValue + 1),\n          leftResult = left.next(),\n          createLeft = leftResult.value;\n\n      while (true) {\n        var rightResult = right.next(),\n            createRight = rightResult.value;\n\n        yield makeFnNode(nodeValue, [createLeft, createRight]);\n\n        if (rightResult.done) break;\n      }\n      if (leftResult.done) break;\n    }\n  }\n\n  var left = allBinaryTrees(i, valueGenerator, nodeValue + 1);\n  while (true) {\n    var leftResult = left.next();\n\n    if (leftResult.done) return makeFnNode(nodeValue, [leftResult.value, makeFnNode(undefined)]);\n    yield makeFnNode(nodeValue, [leftResult.value, makeFnNode(undefined)]);\n  }\n}\n\nfunction* allTrees(size, maxChildren, parent, nodeValueGenerator) {\n  console.log('all', size);\n  if (size == 0) return makeNode(undefined);\n\n  nodeValue = nodeValueGenerator.next().value;\n\n  if (size == 1) return makeNode(nodeValue);\n\n  yield makeNode(nodeValue);\n\n  var i = 0;\n  for (i; i < size - 1; i++) {\n    console.log('i', i);\n    var left = allBinaryTrees(i, nodeValueGenerator);\n    console.log('left', left);\n    while (true) {\n      var leftResult = left.next(),\n          j = size - 1 - i,\n          right = allBinaryTrees(j, nodeValueGenerator);\n\n      console.log('leftResult', leftResult);\n      console.log('right', right);\n\n      while (true) {\n        var rightResult = right.next(),\n            children = [];\n\n        console.log('rightResult', rightResult);\n\n        // if (i != 0) children.push(leftResult.value);\n        // if (j != 0) children.push(rightResult.value);\n        // if (!(leftResult.done && leftResult.value == undefined)) children.push(leftResult.value);\n        // if (!(rightResult.done && rightResult.value == undefined)) children.push(rightResult.value);\n\n        console.log('children', children);\n        console.log('nodeValue', nodeValue);\n\n        var childValue = nodeValueGenerator.next().value;\n        // yield makeNode(nodeValue, children.length > 0 ? children : undefined);\n        yield makeNode(childValue, [leftResult.value, rightResult.value]);\n\n        if (rightResult.done) break;\n      }\n      if (leftResult.done) break;\n    }\n  }\n\n  var left = allBinaryTrees(i, nodeValueGenerator),\n      j = 0;\n  while (true) {\n    var leftResult = left.next();\n\n    console.log('last leftResult', leftResult);\n\n    nodeValue = nodeValueGenerator.next().value;\n    if (leftResult.done) return makeNode(nodeValue, [leftResult.value, makeNode(undefined)]);\n    yield makeNode(nodeValue, [leftResult.value, makeNode(undefined)]);\n    j++;\n  }\n}\n\nfunction printTree(tree, level) {\n  level = level || 0;\n\n  if (tree == undefined) return print('<undefined>');\n\n  var node = tree(),\n      valueResult = node.next(),\n      nodeValue = valueResult.value;\n\n  if (nodeValue == undefined) return;\n  if (valueResult.done) return print(nodeValue);\n\n  printChild(node);\n  print(nodeValue);\n  printChild(node);\n\n  function print(value) {\n    console.log(indent(level) + value);\n  }\n\n  function printChild(tree) {\n    var childResult = tree.next(),\n        childValue = childResult.value;\n\n    if (childValue != undefined) printTree(childValue, level + 1);\n\n    return !childResult.done;\n  }\n\n  function indent(count, character) {\n    character = character || ' ';\n    var s = '';\n    for (var i = 0; i < count; i++) s += character;\n    return s;\n  }\n}\n\n// Implementing and Traversing Trees Using Generators in JavaScript [ECMAScript 6]\n\n\n//   f\n//  b\n//   e\n// r\n//   d\n//  a\n//   c\n"]}