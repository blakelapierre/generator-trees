{"version":3,"file":"src/tests/index.js","sources":["src/tests/index.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0"],"names":[],"mappings":"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","sourceRoot":"/home/blake/development/generator-trees","sourcesContent":["import '/home/blake/development/generator-trees/node_modules/grunt-traceur/node_modules/traceur/bin/traceur-runtime.js';var generators = require('../generatorTrees');\n\nvar {preorder, inorder, postorder, breadthFirst, loopUntilEmpty, gMap, gEach, toGenerator, toArray, makeNode, toNode, asNode} = generators;\n\nfunction* test() {\n  yield 1;\n  yield 2;\n  yield* toGenerator([4, 5, 6, 7]);\n  //return null;\n}\n\n// gMap(toGenerator([1, 2, 3]), value => console.log(value));\n\n// gMap(test(), value => {\n//   if (typeof value == 'function') {\n//     gMap(value(), v => console.log('v', v));\n//   }\n//   console.log('va', value);\n// });\n\n// console.log('\\ndepth first, toGenerator');\n// gMap(depthFirst(makeNode(1, toGenerator([makeNode(2, toGenerator([makeNode(4)])), makeNode(3)]))), value => console.log('value', value));\n\n// console.log('\\ndpeth firs 2');\n// gMap(depthFirst(makeNode(1, [makeNode(2, [makeNode(4)]), makeNode(3)])), value => console.log('value', value));\n\nvar addition = () => {\n  return makeNode('+', function* () {\n    yield makeNode(1);\n    return makeNode('*', function* () {\n      yield makeNode(2);\n      return makeNode(3);\n    });\n  });\n};\n\nconsole.log(asNode(makeNode, 1, makeNode('+', [makeNode(3), makeNode(4)])));\n\nconsole.log('\\npreorder addition');\ngEach(preorder(addition()), value => console.log('log', value));\nconsole.log(toArray(preorder(addition())));\n\nconsole.log('\\ninorder addition');\ngEach(inorder(addition()), value => console.log('log', value));\nconsole.log(toArray(inorder(addition())));\n\nconsole.log('\\npostorder addition');\ngEach(postorder(addition()), value => console.log('log', value));\nconsole.log(toArray(postorder(addition())));\n\nconsole.log('\\nbreadthFirst addition');\ngEach(breadthFirst(addition()), value => console.log('log', value));\nconsole.log(toArray(breadthFirst(addition())));\n\nconsole.log('\\ndepthFirst addition2');\nvar addition2 = toGenerator(['+', toGenerator([1]), toGenerator([2])]);\ngMap(inorder(addition2), value => console.log('log', value));\n\nvar treeNode = () => {\n  return makeNode('root', [\n          makeNode('+', [makeNode(1), makeNode(2)]),\n          makeNode('names', [\n            makeNode('five', [makeNode(5)]),\n            makeNode('six',  [makeNode(6)])\n          ])\n        ]);\n};\n\nconsole.log('\\ntreeNode');\ngMap(inorder(treeNode()), value => console.log('tr', value));\n\n\nfunction testTree(name, tree) {\n  console.log('\\n', name);\n\n  console.log(name, 'preorder', toArray(preorder(parseAsNode(tree))));\n  console.log(name, 'inorder', toArray(inorder(parseAsNode(tree))));\n  console.log(name, 'postorder', toArray(postorder(parseAsNode(tree))));\n  console.log(name, 'breadthFirst', toArray(breadthFirst(parseAsNode(tree))));\n}\n\n\nvar basicTree = {\n  'root': {\n    'one': 1\n  }\n};\n\ntestTree('basic tree', basicTree);\n\nvar binaryTree = {\n  'root': {\n    'one': 1,\n    'two': 2\n  }\n};\n\ntestTree('binary tree', binaryTree);\n\nvar simpleTree = {\n  'root': {\n    'level1': {\n      'level2': 2,\n      'wut': 'this'\n    }\n  }\n};\n\ntestTree('simple tree', simpleTree);\n\n\nvar tree = {\n  'root': {\n    '+': [1, 2, {'*': [3, 4]}],\n    'middle': {\n      'goes': {\n        'deep': ['into', 'the', {'tree': true}]\n      }\n    },\n    'names': {\n      'five': 5,\n      'six': 6\n    }\n  }\n};\n\ntestTree('tree', tree);\n\n// Children are ordered\nvar tree2 = {\n  'root': [\n    {'+': [1, 2, {'*': [3, 4]}]},\n    {'middle': {'goes': {'deep': ['into', 'the', {'tree': true}]}}},\n    {'names': [{'five': 5, 'six': 6}]}\n  ]\n};\n\ntestTree('tree2', tree2);\n\nvar tree3 = {\n  'root': [\n    {'+': [\n      1,\n      2,\n      {'*': [3, 4]}]},\n    {'middle': {\n      'goes': {\n        'deep': [\n          'into',\n          'the',\n          {'tree': true}]}}},\n    {'names': [\n      {'five': 5},\n      {'six': 6}]}]\n};\n\ntestTree('tree3', tree3);\n\nvar tree4 = {\n  'root': [\n    {'+': [\n      1,\n      2,\n      {'*': [3, 4]}\n    ]},\n    {'middle': {\n      'goes': {\n        'deep': [\n          'into',\n          'the',\n          {'tree': true}]\n        }\n      }\n    },\n    {'names': [\n      {'five': 5},\n      {'six': 6}\n    ]}\n  ]\n};\n\ntestTree('tree4', tree4);\n\n\n// gMap(parseAsNode(tree), value => console.log('tree', value));\n\n// gMap(parseAsNode(tree), value => {\n//   if (value && value.next && typeof value.next == 'function') {\n//     gMap(value, v => console.log('v', v));\n//   }\n//   console.log('va', value);\n// });\n\n// console.log('\\ndepthFirst');\n// console.log(toArray(inorder(parseAsNode(tree))));\n\n// console.log('\\nbreadthFirst');\n// //print(breadthFirst(parseAsNode(tree)));\n// console.log(toArray(breadthFirst(parseAsNode(tree))));\n// //console.log(toArray(breadthFirst(parseAsNode(tree2))));\n\nfunction print(generator, prefix) {\n  prefix = prefix || 'print';\n  gMap(generator, value => console.log(prefix, value));\n}\n\n\nfunction* parseAsNode(obj, value) {\n\n  value = value || '@@root';\n\n  var generator = makeNode(value, () => childrenFunction(obj));\n\n  while (true) {\n    var result = generator.next();\n\n    if (result.done) return result.value;\n    else yield result.value;\n  }\n\n  function* childrenFunction(obj) {\n    if (obj.length) {\n      for (var i = 0; i < obj.length - 1; i++) yield makeNode(obj[i]);\n      return makeNode(obj[i]);\n    }\n    else if (typeof obj == 'object') {\n      var keys = Object.keys(obj);\n\n      if (keys.length == 0) throw new Error('is this allowed?');\n\n      for (var i = 0; i < keys.length - 1; i++) {\n        var key = keys[i];\n        var childValue = obj[key];\n\n        yield makeNode(key, (childValue => () => childrenFunction(childValue))(childValue));\n\n        // There should be a call to makeNode in here somehweret\n        // var generator = toNode(childValue, key);\n        // var generator = makeNode(key, () => childrenFunction(childValue));\n        // while (true) {\n        //   var result = generator.next();\n        //   yield result.value;\n        //   if (result.done) break;\n        // }\n      }\n\n      var key = keys[i];\n      var childValue = obj[key];\n\n      return makeNode(key, () => childrenFunction(childValue));\n\n      // There should be a call to makeNode in here somehwere?\n      //var generator = toNode(childValue, key);\n      // var generator = makeNode(key, () => childrenFunction(childValue));\n      // while (true) {\n      //   var result = generator.next();\n      //   if (result.done) return result.value;\n      //   else yield result.value;\n      // }\n    }\n    else return makeNode(obj);\n  }\n\n  // how to handle arrays?\n\n}\n\n\n// var loop = generators.loop(clusterMachineGenerator(5));\n\n// var result;\n\n// for (var i = 0; i < 100; i++) {\n//   result = loop.next();\n//   console.log('result', result);\n// }\n\nvar q = [\n  clusterMachineGenerator(10, 'sfo1-'),\n  clusterMachineGenerator(5, 'nyc3-'),\n  clusterMachineGenerator(7, 'lon1-')\n];\n\nfunction* clusterMachineGenerator(machineCount, prefix) {\n  prefix = prefix || '';\n  var i;\n  for (i = 0; i < machineCount - 1; i++) yield generateMachine(i);\n\n  return generateMachine(i);\n\n  function generateMachine(number) {\n    return { id: prefix + number.toString() };\n  }\n}\n\nfunction* generator2() {\n  var loop = generators.loopUntilEmpty(toGenerator(q)),\n      queue = loop.next().value;\n  var generatorResult;\n  do {\n    generatorResult = loop.next();\n\n    if (generatorResult.done) return;\n    else {\n      var machineGenerator = generatorResult.value,\n          machineResult = machineGenerator.next();\n\n      if (machineResult.done) queue.remove(machineGenerator);\n      else yield machineResult.value;\n    }\n  } while (!generatorResult.done);\n}\n\nfunction* generator3() {\n  var loop = generators.loopUntilEmpty(toGenerator(q)),\n      queue = loop.next().value;\n  var generatorResult;\n  do {\n    generatorResult = loop.next();\n\n    if (generatorResult.done) return;\n    else {\n      var machineGenerator = generatorResult.value,\n          machineResult = machineGenerator.next();\n\n      if (machineResult.done) queue.remove(machineGenerator);\n      else yield machineResult.value;\n    }\n  } while (!generatorResult.done);\n}\n\nvar gen = generators.loopUntilEmpty(toGenerator(q));\n\nvar i = 0;\nwhile (true) {\n  var result = gen.next();\n  console.log(i++, result);\n  if (result.done) break;\n}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1), \n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})"]}