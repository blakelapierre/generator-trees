{"version":3,"sources":["src/tests/index.js"],"names":[],"mappings":";;;;;;iBAMU,UAAU,EAiDV,IAAI,EA2MJ,WAAW,EA4EX,uBAAuB,EAYvB,UAAU,EAkBV,UAAU;AA5WpB,IAAI,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;oBAE2E,UAAU,CAAC,CAAC;IAAvH,QAAQ,iBAAR,QAAQ;IAAE,OAAO,iBAAP,OAAO;IAAE,SAAS,iBAAT,SAAS;IAAE,YAAY,iBAAZ,YAAY;IAAE,MAAM,iBAAN,MAAM;IAAE,QAAQ,iBAAR,QAAQ;IAAE,MAAM,iBAAN,MAAM;IAAE,MAAM,iBAAN,MAAM;IAAE,cAAc,iBAAd,cAAc;IAAE,SAAS,iBAAT,SAAS;oBAC9B,UAAU,CAAC,CAAC;IAArF,SAAS,iBAAT,SAAS;IAAE,UAAU,iBAAV,UAAU;IAAE,GAAG,iBAAH,GAAG;IAAE,IAAI,iBAAJ,IAAI;IAAE,WAAW,iBAAX,WAAW;IAAE,OAAO,iBAAP,OAAO;IAAE,QAAQ,iBAAR,QAAQ;IAAE,GAAG,iBAAH,GAAG;;AAG1E,SAAU,UAAU;;;;AAClB,eAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;eACpB,CAAC;;;;eACD,QAAQ,CAAC,CAAC,CAAC;;;;wCACX;;;;oDACG,CAAC;;;;;;;SACT;;;;wCACK;;;;oDACG,CAAC;;;;;;;SACT;;;qEACM;;;;;uBACC,CAAC;;;;gDACD;;;;4DACG,CAAC;;;;;;;iBACT;;;6EACM;;;;4DACE,CAAC;;;;;;;iBACT;;;;;;;SACF;;;;;;;CACF;;AAED,IAAI,UAAU,GAAG;SAAM,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAAA,CAAC;;AAEvH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,UAAC,CAAC,EAAE,CAAC,EAAK;AACzC,SAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,CAAC;CACd,EAAE,YAAM;AAAE,SAAO,CAAC,CAAC;CAAE,CAAC,CAAC,CAAC;;AAEzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,UAAC,CAAC,EAAE,CAAC,EAAK;AACzC,SAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,CAAC;CACd,EAAE,UAAC,CAAC,EAAE,CAAC,EAAK;AACX,SAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,SAAO,CAAC,GAAG,CAAC,CAAC;CACd,EAAE,YAAM;AAAE,SAAO,CAAC,CAAC;CAAE,CAAC,CAAC,CAAC;;AAEzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,UAAC,CAAC,EAAE,CAAC,EAAK;AACzC,SAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;AACpB,SAAO,CAAC,CAAC;CACV,EAAE,UAAC,CAAC,EAAE,CAAC,EAAK;AACX,SAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;AACpB,SAAO,CAAC,CAAC;CACV,EAAE,YAAM;AAAE,SAAO,EAAE,CAAC;CAAE,CAAC,CAAC,CAAC;;AAE1B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;AAGpB,SAAU,IAAI;;;;;eACN,CAAC;;;;eACD,CAAC;;;yCACA,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;;CAEjC;;;;;;;;;;;;;;;;;AAiBD,IAAI,QAAQ,GAAG,oBAAM;AACnB,SAAO,QAAQ,CAAC,GAAG,2BAAE;;;;;iBACb,QAAQ,CAAC,CAAC,CAAC;;;8CACV,QAAQ,CAAC,GAAG,2BAAE;;;;;yBACb,QAAQ,CAAC,CAAC,CAAC;;;sDACV,QAAQ,CAAC,CAAC,CAAC;;;;;;;WACnB,EAAC;;;;;;;GACH,EAAC,CAAC;CACJ,CAAC;;AAEF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5E,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AACnC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAA,KAAK;SAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;CAAA,CAAC,CAAC;AAC/D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE3C,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;AAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAA,KAAK;SAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;CAAA,CAAC,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE1C,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAA,KAAK;SAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;CAAA,CAAC,CAAC;AAChE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE5C,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;AACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAA,KAAK;SAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;CAAA,CAAC,CAAC;AACnE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE/C,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AACtC,IAAI,SAAS,GAAG,WAAW,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,UAAA,KAAK;SAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;CAAA,CAAC,CAAC;;AAE7D,IAAI,QAAQ,GAAG,oBAAM;AACnB,SAAO,QAAQ,CAAC,MAAM,EAAE,CAChB,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EACzC,QAAQ,CAAC,OAAO,EAAE,CAChB,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,QAAQ,CAAC,KAAK,EAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAChC,CAAC,CACH,CAAC,CAAC;CACV,CAAC;;AAEF,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAA,KAAK;SAAI,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;CAAA,CAAC,CAAC;;AAG5D,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;AAC5B,SAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;AAExB,SAAO,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,SAAO,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,SAAO,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,SAAO,CAAC,GAAG,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;CAC7E;;AAGD,IAAI,SAAS,GAAG;AACd,QAAQ;AACN,SAAO,CAAC;GACT;CACF,CAAC;;AAEF,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;;AAElC,IAAI,UAAU,GAAG;AACf,QAAQ;AACN,SAAO,CAAC;AACR,SAAO,CAAC;GACT;CACF,CAAC;;AAEF,QAAQ,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;;AAEpC,IAAI,UAAU,GAAG;AACf,QAAQ;AACN,YAAU;AACR,cAAU,CAAC;AACX,WAAO,MAAM;KACd;GACF;CACF,CAAC;;AAEF,QAAQ,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;;AAGpC,IAAI,IAAI,GAAG;AACT,QAAQ;AACN,OAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC;AAC1B,YAAU;AACR,YAAQ;AACN,cAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC,MAAQ,IAAI,EAAC,CAAC;OACxC;KACF;AACD,WAAS;AACP,YAAQ,CAAC;AACT,WAAO,CAAC;KACT;GACF;CACF,CAAC;;AAEF,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;;AAGvB,IAAI,KAAK,GAAG;AACV,QAAQ,CACN,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,EAC5B,EAAC,QAAU,EAAC,MAAQ,EAAC,MAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC,MAAQ,IAAI,EAAC,CAAC,EAAC,EAAC,EAAC,EAC/D,EAAC,OAAS,CAAC,EAAC,MAAQ,CAAC,EAAE,KAAO,CAAC,EAAC,CAAC,EAAC,CACnC;CACF,CAAC;;AAEF,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;AAEzB,IAAI,KAAK,GAAG;AACV,QAAQ,CACN,EAAC,GAAG,EAAE,CACJ,CAAC,EACD,CAAC,EACD,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,EACjB,EAAC,QAAU;AACT,YAAQ;AACN,cAAQ,CACN,MAAM,EACN,KAAK,EACL,EAAC,MAAQ,IAAI,EAAC,CAAC,EAAC,EAAC,EAAC,EACxB,EAAC,OAAS,CACR,EAAC,MAAQ,CAAC,EAAC,EACX,EAAC,KAAO,CAAC,EAAC,CAAC,EAAC,CAAC;CAClB,CAAC;;AAEF,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;AAEzB,IAAI,KAAK,GAAG;AACV,QAAQ,CACN,EAAC,GAAG,EAAE,CACJ,CAAC,EACD,CAAC,EACD,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CACd,EAAC,EACF,EAAC,QAAU;AACT,YAAQ;AACN,cAAQ,CACN,MAAM,EACN,KAAK,EACL,EAAC,MAAQ,IAAI,EAAC,CAAC;OAChB;KACF;GACF,EACD,EAAC,OAAS,CACR,EAAC,MAAQ,CAAC,EAAC,EACX,EAAC,KAAO,CAAC,EAAC,CACX,EAAC,CACH;CACF,CAAC;;AAEF,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AAoBzB,SAAS,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE;AAChC,QAAM,GAAG,MAAM,IAAI,OAAO,CAAC;AAC3B,MAAI,CAAC,SAAS,EAAE,UAAA,KAAK;WAAI,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;GAAA,CAAC,CAAC;CACtD;;AAGD,SAAU,WAAW,CAAC,GAAG,EAAE,KAAK;iBAI1B,SAAS,EAGP,MAAM,EAMF,gBAAgB;;;;AAAhB,wBAAgB,YAAhB,gBAAgB,CAAC,GAAG;cAUjB,CAAC,EAJN,IAAI,EAoBJ,GAAG,EACH,UAAU;;;;qBA1BZ,GAAG,CAAC,MAAM;;;;;AACH,iBAAC,GAAG,CAAC;;;sBAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;;uBAAa,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;AAA3B,iBAAC,EAAE;;;;;oDAChC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;sBAEhB,OAAO,GAAG,IAAI,QAAQ,CAAA;;;;;AACzB,oBAAI,GAAG,aAAY,GAAG,CAAC;;sBAEvB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;;;;;sBAAQ,IAAI,KAAK,CAAC,kBAAkB,CAAC;;;AAEhD,iBAAC,GAAG,CAAC;;;sBAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;AAC7B,mBAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AACb,0BAAU,GAAG,GAAG,CAAC,GAAG,CAAC;;uBAEnB,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAA,UAAU;yBAAI;2BAAM,gBAAgB,CAAC,UAAU,CAAC;mBAAA;kBAAA,CAAE,UAAU,CAAC,CAAC;;;AAJhD,iBAAC,EAAE;;;;;AAgBpC,mBAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AACb,0BAAU,GAAG,GAAG,CAAC,GAAG,CAAC;oDAElB,QAAQ,CAAC,GAAG,EAAE;yBAAM,gBAAgB,CAAC,UAAU,CAAC;iBAAA,CAAC;;;oDAW9C,QAAQ,CAAC,GAAG,CAAC;;;;;;;;;qBAxCjB,gBAAgB;;AAX1B,aAAK,GAAG,KAAK,IAAI,QAAQ,CAAC;;AAEtB,iBAAS,GAAG,QAAQ,CAAC,KAAK,EAAE;iBAAM,gBAAgB,CAAC,GAAG,CAAC;SAAA,CAAC;;;aAErD,IAAI;;;;;AACL,cAAM,GAAG,SAAS,CAAC,IAAI,EAAE;;aAEzB,MAAM,CAAC,IAAI;;;;;4CAAS,MAAM,CAAC,KAAK;;;;eACzB,MAAM,CAAC,KAAK;;;;;;;;;;;CAgD1B;;;;;;;;;;;AAYD,IAAI,CAAC,GAAG,CACN,uBAAuB,CAAC,EAAE,EAAE,OAAO,CAAC,EACpC,uBAAuB,CAAC,CAAC,EAAE,OAAO,CAAC,EACnC,uBAAuB,CAAC,CAAC,EAAE,OAAO,CAAC,CACpC,CAAC;;AAEF,SAAU,uBAAuB,CAAC,YAAY,EAAE,MAAM;MAEhD,CAAC,EAKI,eAAe;;;;AAAf,uBAAe,YAAf,eAAe,CAAC,MAAM,EAAE;AAC/B,iBAAO,EAAE,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC3C;;AARD,cAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AAEjB,SAAC,GAAG,CAAC;;;cAAE,CAAC,GAAG,YAAY,GAAG,CAAC,CAAA;;;;;;eAAa,eAAe,CAAC,CAAC,CAAC;;;AAA7B,SAAC,EAAE;;;;;4CAE9B,eAAe,CAAC,CAAC,CAAC;;;;;;;CAK1B;;AAED,SAAU,UAAU;MACd,IAAI,EACJ,KAAK,EACL,eAAe,EAMX,gBAAgB,EAChB,aAAa;;;;AATjB,YAAI,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EACjC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK;;;AAG3B,uBAAe,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;;aAE1B,eAAe,CAAC,IAAI;;;;;;;;AAElB,wBAAgB,GAAG,eAAe,CAAC,KAAK,EACxC,aAAa,GAAG,gBAAgB,CAAC,IAAI,EAAE;;aAEvC,aAAa,CAAC,IAAI;;;;;AAAE,aAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;;;;;;eAC5C,aAAa,CAAC,KAAK;;;YAEzB,CAAC,eAAe,CAAC,IAAI;;;;;;;;;;CAC/B;;AAED,SAAU,UAAU;MACd,IAAI,EACJ,KAAK,EACL,eAAe,EAMX,gBAAgB,EAChB,aAAa;;;;AATjB,YAAI,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EACjC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK;;;AAG3B,uBAAe,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;;aAE1B,eAAe,CAAC,IAAI;;;;;;;;AAElB,wBAAgB,GAAG,eAAe,CAAC,KAAK,EACxC,aAAa,GAAG,gBAAgB,CAAC,IAAI,EAAE;;aAEvC,aAAa,CAAC,IAAI;;;;;AAAE,aAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;;;;;;eAC5C,aAAa,CAAC,KAAK;;;YAEzB,CAAC,eAAe,CAAC,IAAI;;;;;;;;;;CAC/B;;AAED,IAAI,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErC,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,OAAO,IAAI,EAAE;AACX,MAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;AACxB,SAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AACzB,MAAI,MAAM,CAAC,IAAI,EAAE,MAAM;CACxB;;AAED,IAAI,IAAI,GAAG,CAAC;IACR,WAAW,GAAG,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAEjD,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,OAAO,IAAI,EAAE;AACX,MAAI,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;;AAEhC,SAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;;AAEjC,WAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;AAExB,MAAI,MAAM,CAAC,IAAI,EAAE,MAAM;CACxB;AACD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC;AACzD,OAAO,CAAC,GAAG,CAAC,OAAO,QAAQ,CAAC,CAAC;;AAE7B,IAAI,UAAU,GAAG,WAAW,CAAC,CAC3B,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EACtB,WAAW,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAC9B,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAChB,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAC5B,CAAC,CAAC;;AAEH,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC","file":"src/tests/index.js","sourcesContent":["var generators = require('../index');\n\nvar {preorder, inorder, postorder, breadthFirst, reduce, makeNode, toNode, asNode, allBinaryTrees, printTree} = generators.t;\nvar {transform, interleave, map, each, toGenerator, toArray, integers, zip} = generators.g;\n\n\nfunction* reduceTest() {\n  console.log('yielding 1');\n  yield 1;\n  yield makeNode(2);\n  yield function* () {\n    return 3;\n  };\n  yield function* () {\n    return 4;\n  };\n  return function* () {\n    yield 5;\n    yield function*() {\n      return 6;\n    };\n    return function*() {\n      return 7;\n    };\n  }\n}\n\nvar reduceTest = () => makeNode(1, [makeNode(2, [makeNode(3)]), makeNode(4), makeNode(5, [makeNode(6), makeNode(7)])]);\n\nconsole.log(reduce(reduceTest(), (x, y) => {\n  console.log('reduce', x, y);\n  return x + y;\n}, () => { return 0; }));\n\nconsole.log(reduce(reduceTest(), (x, y) => {\n  console.log('reduce', x, y);\n  return x + y;\n}, (x, y) => {\n  console.log('collapse', x, y);\n  return x * y;\n}, () => { return 0; }));\n\nconsole.log(reduce(reduceTest(), (x, y) => {\n  console.log('reduce', x, y);\n  x[y.toString()] = y;\n  return x;\n}, (x, y) => {\n  console.log('collapse', x, y);\n  y[x.toString()] = x;\n  return y;\n}, () => { return {}; }));\n\nconsole.log('done');\n\n\nfunction* test() {\n  yield 1;\n  yield 2;\n  yield* toGenerator([4, 5, 6, 7]);\n  //return null;\n}\n\n// gMap(toGenerator([1, 2, 3]), value => console.log(value));\n\n// gMap(test(), value => {\n//   if (typeof value == 'function') {\n//     gMap(value(), v => console.log('v', v));\n//   }\n//   console.log('va', value);\n// });\n\n// console.log('\\ndepth first, toGenerator');\n// gMap(depthFirst(makeNode(1, toGenerator([makeNode(2, toGenerator([makeNode(4)])), makeNode(3)]))), value => console.log('value', value));\n\n// console.log('\\ndpeth firs 2');\n// gMap(depthFirst(makeNode(1, [makeNode(2, [makeNode(4)]), makeNode(3)])), value => console.log('value', value));\n\nvar addition = () => {\n  return makeNode('+', function* () {\n    yield makeNode(1);\n    return makeNode('*', function* () {\n      yield makeNode(2);\n      return makeNode(3);\n    });\n  });\n};\n\nconsole.log(asNode(makeNode, 1, makeNode('+', [makeNode(3), makeNode(4)])));\n\nconsole.log('\\npreorder addition');\neach(preorder(addition()), value => console.log('log', value));\nconsole.log(toArray(preorder(addition())));\n\nconsole.log('\\ninorder addition');\neach(inorder(addition()), value => console.log('log', value));\nconsole.log(toArray(inorder(addition())));\n\nconsole.log('\\npostorder addition');\neach(postorder(addition()), value => console.log('log', value));\nconsole.log(toArray(postorder(addition())));\n\nconsole.log('\\nbreadthFirst addition');\neach(breadthFirst(addition()), value => console.log('log', value));\nconsole.log(toArray(breadthFirst(addition())));\n\nconsole.log('\\ndepthFirst addition2');\nvar addition2 = toGenerator(['+', toGenerator([1]), toGenerator([2])]);\neach(inorder(addition2), value => console.log('log', value));\n\nvar treeNode = () => {\n  return makeNode('root', [\n          makeNode('+', [makeNode(1), makeNode(2)]),\n          makeNode('names', [\n            makeNode('five', [makeNode(5)]),\n            makeNode('six',  [makeNode(6)])\n          ])\n        ]);\n};\n\nconsole.log('\\ntreeNode');\nmap(inorder(treeNode()), value => console.log('tr', value));\n\n\nfunction testTree(name, tree) {\n  console.log('\\n', name);\n\n  console.log(name, 'preorder', toArray(preorder(parseAsNode(tree))));\n  console.log(name, 'inorder', toArray(inorder(parseAsNode(tree))));\n  console.log(name, 'postorder', toArray(postorder(parseAsNode(tree))));\n  console.log(name, 'breadthFirst', toArray(breadthFirst(parseAsNode(tree))));\n}\n\n\nvar basicTree = {\n  'root': {\n    'one': 1\n  }\n};\n\ntestTree('basic tree', basicTree);\n\nvar binaryTree = {\n  'root': {\n    'one': 1,\n    'two': 2\n  }\n};\n\ntestTree('binary tree', binaryTree);\n\nvar simpleTree = {\n  'root': {\n    'level1': {\n      'level2': 2,\n      'wut': 'this'\n    }\n  }\n};\n\ntestTree('simple tree', simpleTree);\n\n\nvar tree = {\n  'root': {\n    '+': [1, 2, {'*': [3, 4]}],\n    'middle': {\n      'goes': {\n        'deep': ['into', 'the', {'tree': true}]\n      }\n    },\n    'names': {\n      'five': 5,\n      'six': 6\n    }\n  }\n};\n\ntestTree('tree', tree);\n\n// Children are ordered\nvar tree2 = {\n  'root': [\n    {'+': [1, 2, {'*': [3, 4]}]},\n    {'middle': {'goes': {'deep': ['into', 'the', {'tree': true}]}}},\n    {'names': [{'five': 5, 'six': 6}]}\n  ]\n};\n\ntestTree('tree2', tree2);\n\nvar tree3 = {\n  'root': [\n    {'+': [\n      1,\n      2,\n      {'*': [3, 4]}]},\n    {'middle': {\n      'goes': {\n        'deep': [\n          'into',\n          'the',\n          {'tree': true}]}}},\n    {'names': [\n      {'five': 5},\n      {'six': 6}]}]\n};\n\ntestTree('tree3', tree3);\n\nvar tree4 = {\n  'root': [\n    {'+': [\n      1,\n      2,\n      {'*': [3, 4]}\n    ]},\n    {'middle': {\n      'goes': {\n        'deep': [\n          'into',\n          'the',\n          {'tree': true}]\n        }\n      }\n    },\n    {'names': [\n      {'five': 5},\n      {'six': 6}\n    ]}\n  ]\n};\n\ntestTree('tree4', tree4);\n\n\n// gMap(parseAsNode(tree), value => console.log('tree', value));\n\n// gMap(parseAsNode(tree), value => {\n//   if (value && value.next && typeof value.next == 'function') {\n//     gMap(value, v => console.log('v', v));\n//   }\n//   console.log('va', value);\n// });\n\n// console.log('\\ndepthFirst');\n// console.log(toArray(inorder(parseAsNode(tree))));\n\n// console.log('\\nbreadthFirst');\n// //print(breadthFirst(parseAsNode(tree)));\n// console.log(toArray(breadthFirst(parseAsNode(tree))));\n// //console.log(toArray(breadthFirst(parseAsNode(tree2))));\n\nfunction print(generator, prefix) {\n  prefix = prefix || 'print';\n  gMap(generator, value => console.log(prefix, value));\n}\n\n\nfunction* parseAsNode(obj, value) {\n\n  value = value || '@@root';\n\n  var generator = makeNode(value, () => childrenFunction(obj));\n\n  while (true) {\n    var result = generator.next();\n\n    if (result.done) return result.value;\n    else yield result.value;\n  }\n\n  function* childrenFunction(obj) {\n    if (obj.length) {\n      for (var i = 0; i < obj.length - 1; i++) yield makeNode(obj[i]);\n      return makeNode(obj[i]);\n    }\n    else if (typeof obj == 'object') {\n      var keys = Object.keys(obj);\n\n      if (keys.length == 0) throw new Error('is this allowed?');\n\n      for (var i = 0; i < keys.length - 1; i++) {\n        var key = keys[i];\n        var childValue = obj[key];\n\n        yield makeNode(key, (childValue => () => childrenFunction(childValue))(childValue));\n\n        // There should be a call to makeNode in here somehweret\n        // var generator = toNode(childValue, key);\n        // var generator = makeNode(key, () => childrenFunction(childValue));\n        // while (true) {\n        //   var result = generator.next();\n        //   yield result.value;\n        //   if (result.done) break;\n        // }\n      }\n\n      var key = keys[i];\n      var childValue = obj[key];\n\n      return makeNode(key, () => childrenFunction(childValue));\n\n      // There should be a call to makeNode in here somehwere?\n      //var generator = toNode(childValue, key);\n      // var generator = makeNode(key, () => childrenFunction(childValue));\n      // while (true) {\n      //   var result = generator.next();\n      //   if (result.done) return result.value;\n      //   else yield result.value;\n      // }\n    }\n    else return makeNode(obj);\n  }\n\n  // how to handle arrays?\n\n}\n\n\n// var loop = generators.loop(clusterMachineGenerator(5));\n\n// var result;\n\n// for (var i = 0; i < 100; i++) {\n//   result = loop.next();\n//   console.log('result', result);\n// }\n\nvar q = [\n  clusterMachineGenerator(10, 'sfo1-'),\n  clusterMachineGenerator(5, 'nyc3-'),\n  clusterMachineGenerator(7, 'lon1-')\n];\n\nfunction* clusterMachineGenerator(machineCount, prefix) {\n  prefix = prefix || '';\n  var i;\n  for (i = 0; i < machineCount - 1; i++) yield generateMachine(i);\n\n  return generateMachine(i);\n\n  function generateMachine(number) {\n    return { id: prefix + number.toString() };\n  }\n}\n\nfunction* generator2() {\n  var loop = interleave(toGenerator(q)),\n      queue = loop.next().value;\n  var generatorResult;\n  do {\n    generatorResult = loop.next();\n\n    if (generatorResult.done) return;\n    else {\n      var machineGenerator = generatorResult.value,\n          machineResult = machineGenerator.next();\n\n      if (machineResult.done) queue.remove(machineGenerator);\n      else yield machineResult.value;\n    }\n  } while (!generatorResult.done);\n}\n\nfunction* generator3() {\n  var loop = interleave(toGenerator(q)),\n      queue = loop.next().value;\n  var generatorResult;\n  do {\n    generatorResult = loop.next();\n\n    if (generatorResult.done) return;\n    else {\n      var machineGenerator = generatorResult.value,\n          machineResult = machineGenerator.next();\n\n      if (machineResult.done) queue.remove(machineGenerator);\n      else yield machineResult.value;\n    }\n  } while (!generatorResult.done);\n}\n\nvar gen = interleave(toGenerator(q));\n\nvar i = 0;\nwhile (true) {\n  var result = gen.next();\n  console.log(i++, result);\n  if (result.done) break;\n}\n\nvar size = 5,\n    binaryTrees = allBinaryTrees(size, integers);\n\nvar i = 0;\nwhile (true) {\n  var result = binaryTrees.next();\n\n  console.log('tree', i++, result);\n  // console.log(toArray(preorder(result.value)));\n  printTree(result.value);\n\n  if (result.done) break;\n}\nconsole.log('produced', i, 'binary trees of size', size);\nconsole.log(typeof integers);\n\nvar generators = toGenerator([\n  toGenerator([1, 2, 3]),\n  toGenerator([4, undefined, 6]),\n  toGenerator([7]),\n  toGenerator([8, 9, 10, 11])\n]);\n\nconsole.log('zip', toArray(zip(generators)));"]}