{"version":3,"file":"dist/tests/generators.js","sources":["src/tests/generators.js","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA;ACAA,AAAI,EAAA,CAAA,YAAW,0BAAoB,CAAC;;SCApC,EAAC,yBAAoB,CAAA,OAAM,AAAC,iBAAkB,CACtC,CAAA,0BAAqB,mCAA2B,CAAA,0BAAqB,GAAK,EAAC,OAAM,yBAAmB,CAD9D,AAC+D,CAAC;AFDtG,SAAK;AAAG,UAAM;AAAG,cAAU;AAAG,MAAE;AAAG,YAAQ;AAAG,MAAE;AAAG,kBAAc;AAAG,qBAAiB;AAE7F,MAAM,IAAI,AAAC,CAAC,QAAO,CAAG,OAAK,CAAC,CAAC;AAG7B,AAAI,EAAA,CAAA,MAAK,EAAI,CAAA,OAAM,AAAC,CAAC,QAAO,CAAC;AACzB,SAAK,EAAI,CAAA,OAAM,AAAC,CAAC,WAAU,CAAC,CAAC;AAEjC,OAAO,AAAC,CAAC,SAAQ,GAAG,SAAA,AAAC;AAEnB,GAAC,AAAC,CAAC,0BAAyB,GAAG,SAAA,AAAC,CAAK;AACnC,AAAI,MAAA,CAAA,KAAI,EAAI,EAAA;AACR,gBAAQ,EAAI,CAAA,MAAK,AAAC,CAAC,KAAI,CAAG,EAAA,CAAC;AAC3B,YAAI,EAAI,CAAA,OAAM,AAAC,CAAC,SAAQ,CAAC,CAAC;AAE9B,QAAI,OAAO,GAAG,IAAI,AAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC;AACxB,QAAI,OAAO,IAAI,GAAG,IAAI,AAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC;EAG9B,EAAC,CAAC;AACJ,EAAC,CAAC;AAEF,OAAO,AAAC,CAAC,WAAU,GAAG,SAAA,AAAC;AACrB,AAAI,IAAA,CAAA,KAAI,EAAI,EAAA,CAAC;AAEb,GAAC,AAAC,CAAC,0BAAyB,GAAG,SAAA,AAAC;AAC9B,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,MAAK,AAAC,CAAC,KAAI,CAAG,EAAA,CAAC,CAAC;AAEhC,SAAK,AAAC,CAAC,OAAM,AAAC,CAAC,SAAQ,AAAC,CAAC,SAAQ,GAAG,SAAA,KAAI;WAAK,CAAA,KAAI,EAAI,EAAA;IAAA,EAAC,CAAC,CAAC,GAAG,GAAG,IAAI,AAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC;EAC1E,EAAC,CAAC;AACJ,EAAC,CAAC;AAEF,OAAO,AAAC,CAAC,KAAI,GAAG,SAAA,AAAC;AACf,AAAI,IAAA,CAAA,UAAS,EAAI,CAAA,WAAU,AAAC,CAAC,CAC3B,WAAU,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CAAC,CACrB,CAAA,WAAU,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CAAC,CACvB,CAAC,CAAC;AAEF,GAAC,AAAC,CAAC,+CAA8C,GAAG,SAAA,AAAC,CAAK;AACxD,SAAK,AAAC,CAAC,OAAM,AAAC,CAAC,GAAE,AAAC,CAAC,UAAS,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,AAAC,CAAC,CAAC,CAAC,CAAA,CAAE,EAAA,CAAC,CAAG,EAAC,CAAA,CAAG,EAAA,CAAC,CAAG,EAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC,CAAC;EACrE,EAAC,CAAC;AACJ,EAAC,CAAC;AAEF,OAAO,AAAC,CAAC,iBAAgB,GAAG,SAAA,AAAC;AAC3B,AAAI,IAAA,CAAA,KAAI,EAAI,EAAC,CAAA,CAAC,CAAC;AAEf,GAAC,AAAC,CAAC,oBAAmB,GAAG,SAAA,AAAC;AACxB,AAAI,MAAA,CAAA,KAAI,EAAI,EAAA,CAAC;AAEb,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,OAAM,AAAC,CAAC,GAAE,AAAC,CAAC,kBAAiB,AAAC,CAAC,KAAI,CAAC,GAAG,SAAA,KAAI,CAAK;AAC1D,UAAI,EAAE,CAAC;AAEP,SAAI,KAAI,GAAK,EAAA;AAAG,YAAI,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;AAAA,AAE7B,WAAO,MAAI,CAAC;IACd,EAAC,CAAC,CAAC;AAEH,UAAM,IAAI,AAAC,CAAC,OAAM,CAAG,MAAI,CAAC,CAAC;AAE3B,SAAK,AAAC,CAAC,KAAI,CAAC,GAAG,MAAM,AAAC,CAAC,CAAA,CAAC,CAAC;AACzB,SAAK,AAAC,CAAC,KAAI,CAAC,GAAG,IAAI,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC;EAC9B,EAAC,CAAC;AACJ,EAAC,CAAC;AAAA","sourceRoot":"dist/tests/","sourcesContent":["import {repeat, toArray, toGenerator, map, transform, zip, modifiableStack, modifiableStackAlt} from '../generators';\n\nconsole.log('repeat', repeat);\n\n// let g = require('../generators');\nlet should = require('should'),\n    expect = require('expect.js');\n\ndescribe('toArray', () => {\n\n  it('should work with 1 value', () => {\n    let value = 1,\n        generator = repeat(value, 1),\n        array = toArray(generator);\n\n    array.should.be.eql([1]);\n    array.should.not.be.eql([2]);\n\n    // expect(g.toArray(generator)).to.be([1]);\n  });\n});\n\ndescribe('transform', () => {\n  let value = 1;\n\n  it('should work with 1 value', () => {\n    let generator = repeat(value, 1);\n\n    expect(toArray(transform(generator, value => value + 1))).to.be.eql([2]);\n  });\n});\n\ndescribe('zip', () => {\n  let generators = toGenerator([\n    toGenerator([1, 2, 3]),\n    toGenerator([4, 5, 6])\n  ]);\n\n  it('should work with 2 generators of 3 items each', () => {\n    expect(toArray(zip(generators))).to.be.eql([[1,4], [2, 5], [3, 6]]);\n  });\n});\n\ndescribe('modifiableStack', () => {\n  let stack = [1];\n\n  it('should run 2 times', () => {\n    let count = 0;\n\n    let array = toArray(map(modifiableStackAlt(stack), value => {\n      count++;\n\n      if (count == 1) stack.push(3);\n\n      return value;\n    }));\n\n    console.log('count', count);\n\n    expect(count).to.equal(2);\n    expect(array).to.eql([1, 3]);\n  });\n});","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})"]}