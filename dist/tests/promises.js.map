{"version":3,"sources":["src/tests/promises.js"],"names":[],"mappings":";;;;;;IAAO,MAAM,2BAAM,WAAW;;IACtB,IAAI,WAAO,aAAa,EAAxB,IAAI;;IAEJ,WAAW,WAAO,eAAe,EAAjC,WAAW;;AAEnB,QAAQ,CAAC,MAAM,EAAE,YAAM;AACrB,IAAE,CAAC,kBAAkB,EAAE,YAAM;AAC3B,QAAI,CACF,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EACrC,UAAC,MAAM,EAAE,KAAK;aAAK,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;KAAA,EAC7C,UAAA,KAAK;aAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;KAAA,CAAC,CAAC;;AAExC,QAAI,OAAO,GAAG,CAAC,CAAC;AAChB,aAAS,OAAO,CAAC,KAAK,EAAE;AACtB,aAAO,UAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AAC5B,eAAO,EAAE,CAAC;AACV,eAAO,CAAC,KAAK,CAAC,CAAC;OAChB,CAAC,CAAC;KACJ;GACF,CAAC,CAAC;CACJ,CAAC,CAAC","file":"src/tests/promises.js","sourcesContent":["import expect from 'expect.js';\nimport {sync} from '../promises';\n\nimport {toGenerator} from '../generators';\n\ndescribe('sync', () => {\n  it('should run twice', () => {\n    sync(\n      toGenerator([promise(1), promise(2)]),\n      (result, count) => console.log(count, resule),\n      error => console.log('error', error));\n\n    let counter = 0;\n    function promise(value) {\n      return new Promise(resolve => {\n        counter++;\n        resolve(value);\n      });\n    }\n  });\n});\n"]}